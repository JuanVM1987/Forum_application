@page "/CreatePost"
@using HttpClients.ClientInterface
@using Domain.DTOs
@using UIComponents
@inject NavigationManager navMgr
@inject IAuthService auth
@inject IPostService _service;

<AuthorizeView>
    <Authorized>
        <BackgroundImg>
            <form style="width: 23rem;">

                <h3 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Post</h3>
                <h4 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;"> @context.User.Identity!.Name</h4>

                <div class="form-outline mb-4">
                    <label class="form-label" for="form2">Title</label>
                    <input type="text" id="form2" class="form-control form-control-lg" @bind="title"/>

                </div>

                <div class="form-outline mb-4">
                    <label class="form-label" for="form28">Body</label>
                    <textarea rows="7" type="text" id="form28" class="form-control form-control-lg "  @bind="body"></textarea>

                </div>

                <div class="pt-1 mb-4">
                    <button class="btn btn-info btn-lg btn-block" type="button" @onclick="CreateAsync">Create Post</button>
                </div>
                @if (!string.IsNullOrEmpty(msg))
                {
                    <div class="field">
                        <label style="color: red">
                            @msg
                        </label>
                    </div>
                }
            </form>
        </BackgroundImg>

    </Authorized>
    <NotAuthorized>
        <div class="form-outline mb-4" style="margin-top: 50px">
            <label class="form-label">You must login first!</label>
        </div>

    </NotAuthorized>
</AuthorizeView>

@code {
    private PostBasicDto dto;
    private string username;
    private string title;
    private string body;
    private string msg = "";
    private bool showModal = false;

    private async Task CreateAsync()

    {
        try
        {
            username = auth.GetAuthAsync().Result.Identity!.Name!;
            dto = new PostBasicDto(username, title, body);
            
            await _service.CreateAsync(dto);
            navMgr.NavigateTo("/ViewPosts");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message + "----------------------------------------------";
        }
    }



}