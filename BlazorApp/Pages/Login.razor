@page "/Login"
@using UIComponents
@using HttpClients.ClientInterface
@inject IAuthService authService
@inject NavigationManager navMgr

<AuthorizeView>
    <NotAuthorized>
        <BackgroundImg>
            <form style="width: 23rem;">

                <h3 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Login</h3>

                <div class="form-outline mb-4">
                    <input type="email" id="form2Example18" class="form-control form-control-lg" @bind="userName"/>
                    <label class="form-label" for="form2Example18">Username</label>
                </div>

                <div class="form-outline mb-4">
                    <input type="password" id="form2Example28" class="form-control form-control-lg" @bind="password"/>
                    <label class="form-label" for="form2Example28">Password</label>
                </div>

                <div class="pt-1 mb-4">
                    <button class="btn btn-info btn-lg btn-block" type="button" @onclick="LoginAsync">Login</button>
                </div>
                @if (!string.IsNullOrEmpty(errorLabel))
                {
                    <div class="field">
                        <label style="color: red">
                            @errorLabel
                        </label>
                    </div>
                }
                <p>Don't have an account? <a href="RegisterUser" class="link-info">Register here</a></p>

            </form>
        </BackgroundImg>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsync(userName, password);
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

}