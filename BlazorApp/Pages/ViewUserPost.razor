@page "/ViewUserPost/{username}"
@using Domain.Models
@using HttpClients.ClientInterface
@inject IPostService _service;
@attribute [Authorize] 


<div class="row container">
    <h3 style="text-align: center; margin: 10px">@Username POSTS</h3>
    <div class="col-md-6">
        @if (!string.IsNullOrEmpty(_msg))
        {
            <label style="color: red">@_msg</label>
        }
        @if (_posts == null)
        {
        }
        else
        {
            @foreach (var p in _posts.Reverse())
            {
                <div class="card post">
                    <div class="card-body">
                        <div class="card-text">
                            <small class="text-muted" style="margin-bottom: 10px">postID #@p.Id</small>
                        </div>
                        <div class="card-title">
                            <p> <b>@p.Title</b></p>
                        </div>
                        <div class="card-text">
                            <p>@p.Body</p>
                        </div>

                        <div class="card-text" style="margin-top: 10px">
                            <small class="text-muted">Posted on: @p.Created</small>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>


@code {

    [Parameter]
    public string Username { get; set; }

    private IEnumerable<Post>? _posts;

    private string? _msg = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _posts = await _service.GetAsync(null, Username, null, null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _msg = e.Message;
        }
    }

}