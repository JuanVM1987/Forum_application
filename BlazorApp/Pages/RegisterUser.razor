@page "/RegisterUser"
@using HttpClients.ClientInterface
@using Domain.DTOs
@inject IUserService UserService
@inject NavigationManager navMgr
<AuthorizeView>
    <NotAuthorized>
       <section class="vh-100 bg-image"
         style="background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');">
         <div class="mask d-flex align-items-center h-100 gradient-custom-3">
           <div class="container h-100">
             <div class="row d-flex justify-content-center align-items-center h-100">
               <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                 <div class="card" style="border-radius: 15px;">
                   <div class="card-body p-5">
                     <h2 class="text-uppercase text-center mb-5">Create an account</h2>
       
                     <form>
       
                       <div class="form-outline mb-4">
                         <input type="text" id="form3Example1cg" class="form-control form-control-lg" @bind="username" />
                         <label class="form-label" for="form3Example1cg">Your Userame</label>
                       </div>
       
                       <div class="form-outline mb-4">
                         <input type="email" id="form3Example3cg" class="form-control form-control-lg" @bind="email"/>
                         <label class="form-label" for="form3Example3cg">Your Email</label>
                       </div>
       
                       <div class="form-outline mb-4">
                         <input type="password" id="form3Example4cg" class="form-control form-control-lg" @bind="password" />
                         <label class="form-label" for="form3Example4cg">Password</label>
                       </div>
       
                       <div class="form-outline mb-4">
                         <input type="password" id="form3Example4cdg" class="form-control form-control-lg" @bind="confirmPassword" />
                         <label class="form-label" for="form3Example4cdg">Repeat your password</label>
                       </div>

                         <div class="d-flex justify-content-center">
                             <button type="button"
                                     class="btn btn-success btn-lg btn-block" @onclick="CheckPassword">Register</button>
                         </div>
                        @if (!string.IsNullOrEmpty(msg))
                        {
                            <div>
                                <span style="color: @color">@msg</span>
                            </div>
                        }
                         <p class="text-center text-muted mt-5 mb-0">Have already an account? <a href="Login"
                           class="fw-bold text-body"><u>Login here</u></a></p>
       
                     </form>
       
                   </div>
                 </div>
               </div>
             </div>
           </div>
         </div>
       </section>
    </NotAuthorized>
    <Authorized>
        <div style="margin-top: 70px">
            <h3 style="text-align: center"> @context.User.Identity!.Name, you are already registered!</h3>
        </div>
    </Authorized>

</AuthorizeView>

@code {
    private string? username = "";
    private string? email = "";
    private string? password = "";
    private string? confirmPassword = "";

    private string? msg = "";
    private string? color = "";


    private async Task Register()
    {
        msg = "";
        try
        {
            await UserService.RegisterAsync(new UserCreationDto(username, email, password));
            username = "";
            email = "";
            password = "";
            confirmPassword = "";
            msg = "User successfully register!";
            color = "green";
            navMgr.NavigateTo("/Login");
            
        }
        catch (Exception e)
        {
            color = "red";
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task CheckPassword()
    {
        try
        {
            if (confirmPassword.Equals(password))
            {
                await Register();
            }
            else
            {
                msg = "Passwords doesn't match";
                color = "red";
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

}