@page "/RegisterUser"
@using HttpClients.ClientInterface
@using Domain.DTOs
@inject IUserService UserService

<div class="card">
    <h3>Register</h3>
    <div class="form-group field">
        <label>User name:</label>
        <input type="text" @bind="username" @bind:event="oninput"/>
        <label>Email:</label>
        <input type="text" @bind="email" @bind:event="oninput">
        <label>Password</label>
        <input type="password" @bind="password" @bind:event="oninput" />
        <label>Confirmation Password</label>
        <input type="password" @bind="confirmPassword" @bind:event="oninput" />
        
        @if (!string.IsNullOrEmpty(msg))
        {
            <label style="color: @color">@msg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="CheckPassword" disabled="@(string.IsNullOrEmpty(username)&&string.IsNullOrEmpty(email))" class="acceptbtn">Register</button>
    </div>
</div>

@code {
    private string username = "";
    private string email = "";
    private string password = "";
    private string confirmPassword = "";
    
    private string msg = "";
    private string color = "";
    
    
    private async Task Register()
    {
        msg = "";
        try
        {
            await UserService.RegisterAsync(new UserCreationDto(username, email, password));
            username = "";
            email = "";
            password = "";
            confirmPassword= "";
            msg = "User successfully register!";
            color = "green";
            
        }
        catch (Exception e)
        {
            color = "red";
            Console.WriteLine(e);
            msg = e.Message;
            
        }
    }

    private async Task CheckPassword()
    {
        try
        {
             if (confirmPassword.Equals(password))
             {
                 await Register();
             }
             else
             {
                 msg = "Passwords doesn't match";
                 color = "red";
             }
                
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
       
    }
}